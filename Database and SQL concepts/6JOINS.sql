/*JOINS 
CROSS JOIN
INNER JOIN
LEFT OUTER JOIN 
RIGHT OUTER JOIN
FULLL OUTER JOIN 
SELF JOIN
*/

CREATE TABLE employees_data(
	id INT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	department VARCHAR(50) NOT NULL
);


CREATE TABLE salaries_data(
	id INT PRIMARY KEY,
	employee_id INTEGER NOT NULL,
	salary INTEGER NOT NULL
);

/*In both the table one of the data is missing to understand joins better*/
INSERT INTO employees_data (id,name,department)
VALUES (1,'John Smith','Sales'),
		(2,'Jane Doe','Marketing'),
		(3,'Bob Brown','Sales'),
		(5,'Sarah Anderson','Marketing');

INSERT INTO salaries_data (id,employee_id,salary)
VALUES (1,1,50000),
		(2,2,60000),
		(3,3,70000),
		(4,4,80000);

/*INNER JOIN*/

SELECT 
e.id,
e.name,
e.department,
s.salary
FROM employees_data as e
INNER JOIN salaries_data as s ON e.id = s.employee_id;

/* LEFT JOIN*/

SELECT 
e.id,
e.name,
e.department,
s.salary
FROM employees_data as e
LEFT JOIN salaries_data as s ON e.id = s.employee_id;

/* RIGHT JOIN*/

SELECT * from salaries_data as s
RIGHT JOIN employees_data as e ON e.id = s.employee_id;


/* Genrally we can have right join withot using RIGHT JOIN
HOW: Just switch the column names in LEFT JOIN


SELECT 
e.id,
e.name,
e.department,
s.salary
FROM salaries_data as e
LEFT JOIN employees_data as s ON e.id = s.employee_id;
*/


 /* FULL OUTER JOIN*/

SELECT 
* 
FROM employees_data as e
FULL OUTER JOIN salaries_data as s ON e.id = s.employee_id;

/*CROSS JOIN*/


SELECT employees_data.name, salaries_data.salary
FROM employees_data
CROSS JOIN salaries_data;


/*Practicing with other tables */

CREATE TABLE customers(
	id INT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	email VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE orders(
	id INT PRIMARY KEY,
	customer_id INTEGER NOT NULL,
	product VARCHAR(50) NOT NULL,
	quantity INTEGER NOT NULL,
	price DECIMAL(10,2) NOT NULL
);


INSERT INTO customers (id, name, email)
VALUES  (1,'John Smith','john@example.com'),
		(2,'Virat Kholi','virat@example.com'),
		(3,'Jasprit Bhumra','jassi@example.com'),
		(4,'Rohit Sharma','shanna@example.com'),
		(5,'MS Dhoni','cool@example.com'),
		(6,'Abhishek Ram','ram@gmail.com');
		



INSERT INTO orders ( id, customer_id, product, quantity, price)
VALUES  (1,1,'iPhone',2, 2000),
		(2,2,'London Property',4,10000),
		(3,3,'Nike Shoes',2,5000),
		(4,5,'MacBook',1,4000)
		(5,1,'Bottle',1,50),
		(6,2,'UK property',5,6000),
		(7,3,'Socks',2,800),
		(8,4,'Lamborginin Urus',1,9000),
		(9,5,'t-shirt',5,700);
		
/*INNER JOIN*/

SELECT 
o.id,
c.name,
o.product,
o.quantity,
o.price
FROM orders as o
INNER JOIN customers as c ON o.customer_id = c.id;

/*LEFT JOIN*/

SELECT 
o.id,
c.name,
o.product,
o.quantity,
o.price
FROM orders as o
LEFT JOIN customers as c ON o.customer_id = c.id;

/*RIGHT JOIN*/
SELECT 
o.id,
c.name,
o.product,
o.quantity,
o.price
FROM customers as c
LEFT JOIN orders as o ON o.customer_id = c.id;


/*FULL OUTER JOIN*/
SELECT
o.id,
c.name,
o.product,
o.quantity,
o.price
FROM orders as o 
FULL OUTER JOIN customers as c ON o.customer_id = c.id;


/*Practice questions*/

/*Q1. Write a query to find the name and email of customers who have placed an order for an iPhone*/
SELECT customers.name, customers.email
FROM customers 
INNER JOIN orders ON customers.id = orders.customer_id
WHERE orders.product = 'iPhone';


/*Q2. Write a query to find the total number of orders placed by each customer, sorted by the number of orders in descending order.*/

SELECT customers.name , COUNT(orders.id) AS num_orders
FROM customers
LEFT JOIN orders ON customers.id = orders.customer_id
GROUP BY customers.name
ORDER BY num_orders DESC;

/* Write a query to find the total revenue generated by each product, sorted by revenue in descending order*/
SELECT orders.product,SUM(orders.quantity * orders.price) AS revenue
FROM orders
GROUP BY orders.product
ORDER BY revenue DESC;


/* write a query to find the name and email of customers who have not placed an order.*/
SELECT customers.name, customers.email,orders.id
FROM customers
LEFT JOIN orders ON customers.id = orders.customer_id
WHERE orders.id IS NULL;


/*Write a query to find the name and salary of each employee and thier manager's name and salary.*/













